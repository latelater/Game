{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "speed",
    "v2",
    "maxSpeed",
    "acce",
    "direction",
    "jumpSpeed",
    "gravity",
    "groundY",
    "onLoad",
    "node",
    "y",
    "jumping",
    "collisionX",
    "collisionY",
    "director",
    "getCollisionManager",
    "enabled",
    "systemEvent",
    "on",
    "SystemEvent",
    "EventType",
    "KEY_DOWN",
    "onKeyDown",
    "KEY_UP",
    "onKeyUp",
    "color",
    "Color",
    "newColor",
    "clone",
    "console",
    "log",
    "onDestroy",
    "enabledDebugDraw",
    "off",
    "event",
    "keyCode",
    "KEY",
    "a",
    "left",
    "d",
    "right",
    "w",
    "up",
    "onCollisionEnter",
    "other",
    "self",
    "RED",
    "touchingNumber",
    "otherAabb",
    "world",
    "aabb",
    "otherPreAabb",
    "preAabb",
    "selfAabb",
    "selfPreAabb",
    "x",
    "Intersection",
    "rectRect",
    "xMax",
    "parent",
    "xMin",
    "width",
    "touchingX",
    "yMax",
    "yMin",
    "height",
    "touchingY",
    "onCollisionExit",
    "update",
    "dt",
    "Math",
    "abs"
  ],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        speed: cc.v2(0, 0),\r\n        maxSpeed: cc.v2(0, 0),\r\n        acce: 0,\r\n        direction: 0,\r\n        jumpSpeed:0,\r\n        gravity:0,\r\n        groundY: 0\r\n    },\r\n\r\n    onLoad: function () {\r\n        this.groundY = this.node.y;\r\n        this.jumping = false;\r\n        this.collisionX = 0;//x轴是否碰撞，0：没有碰撞，-1：左方有碰撞，1：右方有碰撞\r\n        this.collisionY = 0;\r\n        cc.director.getCollisionManager().enabled = true;\r\n        // cc.director.getCollisionManager().enabledDebugDraw = true;\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n\r\n        var color = new cc.Color(this.node.color);\r\n        this.newColor = color.clone();\r\n        console.log(this.newColor);\r\n    },\r\n\r\n    onDestroy() {\r\n        cc.director.getCollisionManager().enabled = false;\r\n        cc.director.getCollisionManager().enabledDebugDraw = false;\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    },\r\n\r\n    onKeyDown(event) {\r\n        switch (event.keyCode) {\r\n            case cc.KEY.a:\r\n            case cc.KEY.left:\r\n                this.direction = -1;\r\n                break;\r\n            case cc.KEY.d:\r\n            case cc.KEY.right:\r\n                this.direction = 1;\r\n                break;\r\n            case cc.KEY.w:\r\n            case cc.KEY.up:\r\n                if(!this.jumping){\r\n                    this.jumping = true;\r\n                    this.speed.y = this.jumpSpeed;\r\n                }\r\n\r\n        }\r\n    },\r\n\r\n    onKeyUp(event) {\r\n        switch (event.keyCode) {\r\n            case cc.KEY.a:\r\n            case cc.KEY.left:\r\n            case cc.KEY.d:\r\n            case cc.KEY.right:\r\n                this.direction = 0;\r\n                break;\r\n        }\r\n    },\r\n\r\n    onCollisionEnter: function (other, self) {\r\n\r\n        this.node.color = cc.Color.RED;\r\n\r\n        this.touchingNumber++;\r\n\r\n        // 1st step \r\n        // get pre aabb, go back before collision\r\n        var otherAabb = other.world.aabb;\r\n        var otherPreAabb = other.world.preAabb.clone();\r\n\r\n        var selfAabb = self.world.aabb;\r\n        var selfPreAabb = self.world.preAabb.clone();\r\n\r\n        // 2nd step\r\n        // forward x-axis, check whether collision on x-axis\r\n        selfPreAabb.x = selfAabb.x;\r\n        otherPreAabb.x = otherAabb.x;\r\n\r\n        if (cc.Intersection.rectRect(selfPreAabb, otherPreAabb)) {\r\n            if (this.speed.x < 0 && (selfPreAabb.xMax > otherPreAabb.xMax)) {\r\n                this.node.x = otherPreAabb.xMax - this.node.parent.x;\r\n                this.collisionX = -1;\r\n            }\r\n            else if (this.speed.x > 0 && (selfPreAabb.xMin < otherPreAabb.xMin)) {\r\n                this.node.x = otherPreAabb.xMin - selfPreAabb.width - this.node.parent.x;\r\n                this.collisionX = 1;\r\n            }\r\n\r\n            this.speed.x = 0;\r\n            other.touchingX = true;\r\n            return;\r\n        }\r\n\r\n        // 3rd step\r\n        // forward y-axis, check whether collision on y-axis\r\n        selfPreAabb.y = selfAabb.y;\r\n        otherPreAabb.y = otherAabb.y;\r\n\r\n        if (cc.Intersection.rectRect(selfPreAabb, otherPreAabb)) {\r\n            if (this.speed.y < 0 && (selfPreAabb.yMax > otherPreAabb.yMax)) {\r\n                this.node.y = otherPreAabb.yMax - this.node.parent.y;\r\n                this.jumping = false;\r\n                this.collisionY = -1;\r\n            }\r\n            else if (this.speed.y > 0 && (selfPreAabb.yMin < otherPreAabb.yMin)) {\r\n                this.node.y = otherPreAabb.yMin - selfPreAabb.height - this.node.parent.y;\r\n                this.collisionY = 1;\r\n            }\r\n\r\n            this.speed.y = 0;\r\n            other.touchingY = true;\r\n        }\r\n\r\n    },\r\n\r\n    onCollisionExit: function (other) {\r\n        this.touchingNumber--;\r\n        // if (this.touchingNumber === 0) {\r\n        //     this.node.color = cc.Color.WHITE;\r\n        // }\r\n\r\n        if (other.touchingX) {\r\n            this.collisionX = 0;\r\n            other.touchingX = false;\r\n        }\r\n        else if (other.touchingY) {\r\n            other.touchingY = false;\r\n            this.collisionY = 0;\r\n            this.jumping = true;\r\n        }\r\n\r\n        this.node.color = this.newColor;\r\n    },\r\n\r\n\r\n    update: function (dt) {\r\n\r\n        if (this.collisionY === 0) {//如果Y轴没有碰撞\r\n            this.speed.y += this.gravity * dt;\r\n            if (Math.abs(this.speed.y) > this.maxSpeed.y) {\r\n                this.speed.y = this.speed.y > 0 ? this.maxSpeed.y : -this.maxSpeed.y;\r\n            }\r\n        }\r\n\r\n        if (this.direction === 0) {\r\n            if (this.speed.x > 0) {\r\n                this.speed.x -= this.acce * dt;\r\n                if (this.speed.x <= 0) this.speed.x = 0;\r\n            }\r\n            else if (this.speed.x < 0) {\r\n                this.speed.x += this.acce * dt;\r\n                if (this.speed.x >= 0) this.speed.x = 0;\r\n            }\r\n        }\r\n        else {\r\n            this.speed.x += (this.direction > 0 ? 1 : -1) * this.acce * dt;\r\n            if (Math.abs(this.speed.x) > this.maxSpeed.x) {\r\n                this.speed.x = this.speed.x > 0 ? this.maxSpeed.x : -this.maxSpeed.x;\r\n            }\r\n        }\r\n\r\n        this.node.x += this.speed.x * dt;\r\n        this.node.y += this.speed.y * dt;\r\n        if(this.node.y <= this.groundY){\r\n            this.node.y = this.groundY;\r\n            this.jumping = false;\r\n        }\r\n    },\r\n});"
  ]
}